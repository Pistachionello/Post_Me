{"version":3,"sources":["hooks/abortableHttp.hook.js","components/ShowPosts.js","components/Loading.js","components/ShowPost.js","redux/reducers/authReducer.js","hooks/auth.hook.js","components/LoginComponent.js","components/RegistrationComponent.js","routes/visitor-routes.js","components/FormikComponents/TextAreaField.js","components/WritePost.js","components/ShowUserPosts.js","hooks/confirmation.hook.js","components/UserPost.js","components/AccountInfo.js","components/AccountSettings.js","components/pages/UserAccountPage.js","routes/user-routes.js","components/Navbar.js","App.js","hooks/auto-authenticate.hook.js","redux/rootReducer.js","index.js"],"names":["useAbortableHttp","addToast","useToasts","useState","loading","setLoading","controller","AbortController","signal","abort","request","useCallback","url","opts","a","body","JSON","stringify","fetch","response","json","data","success","appearance","message","warning","error","name","console","log","ShowPosts","history","useHistory","posts","setPosts","getPosts","method","result","useEffect","className","type","length","map","post","key","publication_date","onClick","id","push","title","Loading","ShowPost","postId","useParams","setPost","getPost","validationSchema","Yup","description","max","required","values","Date","toUTCString","nickname","initialValues","onSubmit","htmlFor","Button","variant","color","disabled","comments","comment","initialState","userData","token","isAuthenticated","authSlice","createSlice","reducers","createAuthObj","reducer","state","payload","prepare","authObj","updateUserData","newState","clearAuthObj","actions","authReducer","useAuth","dispatch","useDispatch","ready","setReady","login","tokenToCheck","headers","Authorization","verified","user","localStorage","setItem","logout","removeItem","LoginComponent","email","password","min","props","to","RegistrationComponent","VisitorRoutes","path","exact","MyTextField","useField","field","WritePost","useSelector","rows","ShowUserPosts","match","useRouteMatch","then","NO_OP","useConfirmation","useAgreement","onCancel","show","setShow","setMessage","checkMark","setCheckMark","handleMessageChange","handleShowChange","handleSubmit","handleCancel","document","classList","add","remove","modal","FormControlLabel","label","control","Checkbox","onChange","UserPost","isChanged","setIsChanged","setInitialValues","setData","formik","useFormik","enableReinitialize","isEqual","getFieldProps","touched","errors","last_update_date","AccountInfo","creation_date","AccountSettings","open","setOpen","emailFormik","changes","nicknameFormik","Alert","severity","Collapse","in","href","event","preventDefault","UserAccountPage","UserRoutes","Navbar","App","isReady","setIsReady","parse","getItem","useAutoAuthenticate","toastStack","removeToast","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","app","autoDismiss","autoDismissTimeout","placement","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f42527d9.chunk.js","sourcesContent":["import {useState, useCallback} from \"react\";\r\nimport {useToasts} from 'react-toast-notifications'\r\n\r\nexport default function useAbortableHttp() {\r\n    const {addToast} = useToasts();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const controller = new AbortController();\r\n    const {signal} = controller;\r\n\r\n    const request = useCallback(async (url, opts) => {\r\n        setLoading(true);\r\n\r\n        if (opts && opts.body) {\r\n            opts.body = JSON.stringify(opts.body);\r\n            opts[\"headers\"] = {};\r\n            opts[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(url, {...opts, signal});\r\n            const data = await response.json();\r\n\r\n            if (data && data.success) {\r\n                addToast(data.success, {appearance: \"success\"});\r\n            }\r\n            if (data && data.message) {\r\n                addToast(data.message, {appearance: \"info\"});\r\n            }\r\n            if (data && data.warning) {\r\n                addToast(data.warning, {appearance: \"warning\"});\r\n            }\r\n            if (data && data.error) {\r\n                addToast(data.error, {appearance: \"error\"});\r\n            }\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (err) {\r\n            if (err.name === 'AbortError') {\r\n                addToast(\"Request was aborted\", {appearance: \"warning\"});\r\n                return;\r\n            }\r\n            setLoading(false);\r\n            console.log(err);\r\n        }\r\n    }, [addToast, signal]);\r\n\r\n    return {abort: () => controller.abort(), loading, request};\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\n\r\nexport default function ShowPosts() {\r\n    const history = useHistory();\r\n\r\n    const {abort, loading, request} = useAbortableHttp();\r\n    const [posts, setPosts] = useState(null);\r\n\r\n    const getPosts = useCallback(async function () {\r\n        const data = await request(\"/api/visitor/posts\", {\r\n            method: \"GET\"\r\n        });\r\n        if (data && data.result) {\r\n            setPosts(data.result);\r\n        }\r\n    }, [request])\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [getPosts])\r\n\r\n    function handleRedirect(url) {\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container pt-2\">\r\n            {loading ? (\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <Loader type=\"ThreeDots\"/>\r\n                </div>\r\n            ) : (\r\n                posts?.length && posts.map((post) => {\r\n                    return (\r\n                        <div className=\"post_link\" key={post.publication_date}\r\n                             onClick={() => handleRedirect(`/post/${post.id}`)}>\r\n                            {post.title}\r\n                        </div>\r\n                    )\r\n                })\r\n            )}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <Loader type=\"ThreeDots\"/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\n\r\nexport default function ShowPost() {\r\n    const {postId} = useParams();\r\n\r\n    const {abort, loading, request} = useAbortableHttp();\r\n\r\n    const [post, setPost] = useState(null);\r\n\r\n    const getPost = useCallback(async function () {\r\n        const data = await request(`/api/visitor/post/${postId}`, {\r\n            method: \"GET\"\r\n        });\r\n        if (data && data.result) {\r\n            setPost(data.result);\r\n        }\r\n    }, [request, postId])\r\n\r\n    useEffect(() => {\r\n        getPost();\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [getPost])\r\n\r\n    const initialValues = {\r\n        description: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        description: Yup.string()\r\n            .max(500, \"Must be 500 characters or less\")\r\n            .required('This field is required')\r\n    });\r\n\r\n    async function onSubmit(values) {\r\n        await request(`/api/visitor/post/${postId}/leave_comment`, {\r\n            method: \"POST\",\r\n            body: values\r\n        });\r\n        getPost();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container pt-2\">\r\n            {loading ? (<Loading/>) : (\r\n                post && (\r\n                    <div>\r\n                        Title: <br/>\r\n                        {post.title} <br/>\r\n                        Description: <br/>\r\n                        {post.description} <br/>\r\n                        Publication date: {new Date(post.publication_date).toUTCString()} <br/>\r\n\r\n                        Author: {post.nickname} <br/>\r\n                        <hr/>\r\n                        <div className=\"leave_comment\">\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}\r\n                            >\r\n                                {() => {\r\n                                    return (\r\n                                        <Form>\r\n                                            Leave comment:\r\n                                            <div className=\"input_container mb-2\">\r\n                                                <div className=\"label_container\">\r\n                                                    <label htmlFor={\"description\"}>Description:</label>\r\n                                                </div>\r\n                                                <div className=\"input\">\r\n                                                    <Field className=\"w-100\" id={\"description\"} name={\"description\"}\r\n                                                           type=\"text\"/>\r\n                                                </div>\r\n                                                <div className=\"errors_container\">\r\n                                                    <ErrorMessage name={\"description\"}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Button variant=\"contained\" color=\"secondary\" type=\"submit\"\r\n                                                    disabled={loading}>\r\n                                                Leave comment\r\n                                            </Button>\r\n                                        </Form>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"comments\">\r\n                            {post.comments && post.comments.map((comment) => {\r\n                                return (\r\n                                    <div key={comment.publication_date}>\r\n                                        Description: <br/>\r\n                                        {comment.description} <br/>\r\n                                        Publication date: {new Date(comment.publication_date).toUTCString()} <br/>\r\n                                        <hr/>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    userData: {},\r\n    token: null,\r\n    isAuthenticated: false\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: \"authReducer\",\r\n    initialState,\r\n    reducers: {\r\n        createAuthObj: {\r\n            reducer: (state, {payload}) => {\r\n                return payload;\r\n            },\r\n            prepare: authObj => ({payload: authObj})\r\n        },\r\n        updateUserData: {\r\n            reducer: (state, {payload}) => {\r\n                const newState = {...state};\r\n                newState[\"userData\"] = payload;\r\n                return newState;\r\n            },\r\n            prepare: userData => ({payload: userData})\r\n        },\r\n        clearAuthObj: () => {\r\n            return initialState;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {createAuthObj, clearAuthObj, updateUserData} = authSlice.actions;\r\nexport const authReducer = authSlice.reducer;","import {useCallback, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport {createAuthObj, clearAuthObj} from \"../redux/reducers/authReducer\";\r\nimport useAbortableHttp from \"./abortableHttp.hook\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\n\r\nexport const userStorageName = \"userData\";\r\n\r\nexport default function useAuth() {\r\n    const dispatch = useDispatch();\r\n    const {addToast} = useToasts();\r\n\r\n    const {request} = useAbortableHttp();\r\n\r\n    const [ready, setReady] = useState(false);\r\n\r\n    const login = useCallback(async (tokenToCheck) => {\r\n        //When try to login, first test if jwtToken is valid\r\n        const data = await request(\"/api/auth/authorize\", {\r\n            method: \"POST\",\r\n            body: null,\r\n            headers: {Authorization: `Bearer ${tokenToCheck}`}\r\n        });\r\n        setReady(true);\r\n        if (data && data.verified) {\r\n            const userData = data.user;\r\n            localStorage.setItem(userStorageName, JSON.stringify({token: tokenToCheck}))\r\n            dispatch(createAuthObj({userData, token: tokenToCheck, isAuthenticated: !!tokenToCheck}))\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const logout = useCallback(() => {\r\n        addToast(\"You successfully logged out\", {appearance: \"success\"});\r\n        localStorage.removeItem(userStorageName);\r\n        dispatch(clearAuthObj());\r\n        setReady(true);\r\n    }, [dispatch, addToast]);\r\n\r\n    return {login, logout, ready}\r\n}","import React, {useEffect} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\nimport useAuth from \"../hooks/auth.hook\";\r\n\r\nexport default function LoginComponent() {\r\n    const {login} = useAuth();\r\n    const {abort, request, loading} = useAbortableHttp();\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .max(255, \"Must be 255 characters or less\")\r\n            .email(\"Enter please valid email\")\r\n            .required('This field is required'),\r\n        password: Yup.string()\r\n            .max(255, \"Must be 255 characters or less\")\r\n            .min(8, \"Must be 8 characters or more\")\r\n            .required('This field is required')\r\n    });\r\n\r\n    async function onSubmit(values) {\r\n        const data = await request(\"/api/auth/login\", {\r\n            method: \"POST\",\r\n            body: {user: values},\r\n        })\r\n        if (data && data.token) {\r\n            login(data.token);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {(props) => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"email\"}>Email:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <Field className=\"w-100\" id={\"email\"} name={\"email\"} type=\"text\"/>\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    <ErrorMessage name={\"email\"}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"password\"}>Password:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <Field className=\"w-100\" id={\"password\"} name={\"password\"} type={\"text\"}/>\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    <ErrorMessage name={\"password\"}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"helpful_container\">\r\n                                Don't have an account? Register <Link to=\"/register\">Here.</Link>\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={loading}>\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\n\r\nexport default function RegistrationComponent() {\r\n    const history = useHistory()\r\n\r\n    const {abort, request, loading} = useAbortableHttp();\r\n\r\n    const initialValues = {\r\n        nickname: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        nickname: Yup.string()\r\n            .max(30, \"Must be 30 characters or less\")\r\n            .required('This field is required'),\r\n        email: Yup.string()\r\n            .max(255, \"Must be 255 characters or less\")\r\n            .email(\"Enter please valid email\")\r\n            .required('This field is required'),\r\n        password: Yup.string()\r\n            .max(255, \"Must be 255 characters or less\")\r\n            .min(8, \"Must be 8 characters or more\")\r\n            .required('This field is required')\r\n    });\r\n\r\n    async function onSubmit(values) {\r\n        await request(\"/api/auth/register\", {\r\n            method: \"POST\",\r\n            body: {user: values}\r\n        })\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {(props) => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"nickname\"}>Nickname:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <Field className=\"w-100\" id={\"nickname\"} name={\"nickname\"} type=\"text\"/>\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    <ErrorMessage name={\"nickname\"}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"email\"}>Email:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <Field className=\"w-100\" id={\"email\"} name={\"email\"} type={\"text\"}/>\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    <ErrorMessage name={\"email\"}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"password\"}>Password:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <Field className=\"w-100\" id={\"password\"} name={\"password\"} type={\"text\"}/>\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    <ErrorMessage name={\"password\"}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"helpful_container\">\r\n                                Already have an account? Login <Link to=\"/login\">Here.</Link>\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={loading}>\r\n                                Register\r\n                            </Button>\r\n                        </Form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\n\r\nimport ShowPosts from \"../components/ShowPosts\";\r\nimport ShowPost from \"../components/ShowPost\";\r\nimport LoginComponent from \"../components/LoginComponent\";\r\nimport RegistrationComponent from \"../components/RegistrationComponent\";\r\n\r\nexport default function VisitorRoutes() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <div className=\"container\">\r\n                    Hey you need to authenticate yourself!\r\n                    <hr/>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad, consectetur, rerum! Delectus esse et\r\n                    facilis, iusto maxime quae reprehenderit soluta voluptates? Accusamus laboriosam nulla quas sunt\r\n                    voluptates? Ad alias amet eligendi fugiat, illum iure iusto, labore officia quas reprehenderit\r\n                    similique.\r\n                </div>\r\n            </Route>\r\n            <Route path=\"/posts\" exact>\r\n                <ShowPosts/>\r\n            </Route>\r\n            <Route path=\"/post/:postId\" exact>\r\n                <ShowPost/>\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n                <LoginComponent/>\r\n            </Route>\r\n            <Route path=\"/register\" exact>\r\n                <RegistrationComponent/>\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    );\r\n}","import React from 'react';\r\nimport {useField} from 'formik';\r\n\r\nexport default function MyTextField({...props}) {\r\n    const [field] = useField(props);\r\n    return (\r\n        <textarea {...field} {...props}/>\r\n    );\r\n};","import React, {useEffect} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport TextAreaField from \"./FormikComponents/TextAreaField\";\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\n\r\nexport default function WritePost() {\r\n    const {token} = useSelector(state => state.authReducer);\r\n\r\n    const {abort, request, loading} = useAbortableHttp();\r\n\r\n    const initialValues = {\r\n        title: \"\",\r\n        description: \"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string()\r\n            .max(255, \"Must be 255 characters or less\")\r\n            .required('This field is required'),\r\n        description: Yup.string()\r\n            .max(5000, \"Must be 5000 characters or less\")\r\n            .required('This field is required')\r\n    });\r\n\r\n    async function onSubmit(values) {\r\n        await request(\"/api/user/post/create\", {\r\n            method: \"POST\",\r\n            body: values,\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {(props) => {\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"title\"}>Title:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <Field className=\"w-100\" id={\"title\"} name={\"title\"} type=\"text\"/>\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    <ErrorMessage name={\"title\"}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"description\"}>Description:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <TextAreaField\r\n                                        className=\"w-100\"\r\n                                        id={\"description\"}\r\n                                        name={\"description\"}\r\n                                        rows={\"10\"}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    <ErrorMessage name={\"description\"}/>\r\n                                </div>\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={loading}>\r\n                                Create post\r\n                            </Button>\r\n                        </Form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\n\r\nexport default function ShowUserPosts() {\r\n    const match = useRouteMatch();\r\n    const {token} = useSelector(state => state.authReducer);\r\n\r\n    const {abort, request, loading} = useAbortableHttp();\r\n\r\n    const [posts, setPosts] = useState(null);\r\n\r\n    useEffect(() => {\r\n        request(\"/api/user/posts\", {\r\n            method: \"GET\",\r\n            body: null,\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        }).then(data => {\r\n            if (data && data.result) {\r\n                setPosts(data.result);\r\n            }\r\n        });\r\n\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [token])\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<Loading/>) : (\r\n                <div>\r\n                    {posts && posts.length ? posts.map((post) => {\r\n                        return (\r\n                            <div key={post.publication_date}>\r\n                                <Link to={`${match.path}/${post.id}`}>{post.title}</Link>\r\n                            </div>\r\n                        );\r\n                    }) : (<div>You dont have posts</div>)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Checkbox, FormControlLabel} from \"@material-ui/core\";\r\n\r\nconst NO_OP = () => {\r\n};\r\n\r\nexport default function useConfirmation(onSubmit = NO_OP, useAgreement = true, onCancel = NO_OP) {\r\n    const [show, setShow] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [checkMark, setCheckMark] = useState(!useAgreement)\r\n\r\n    function handleMessageChange(message = \"\") {\r\n        setMessage(message);\r\n    }\r\n\r\n    function handleShowChange() {\r\n        setShow(!show);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        onSubmit();\r\n        setShow(false);\r\n    }\r\n\r\n    function handleCancel() {\r\n        onCancel();\r\n        setShow(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            document.body.classList.add(\"confirm\");\r\n        } else {\r\n            document.body.classList.remove(\"confirm\");\r\n        }\r\n        return () => {\r\n            document.body.classList.remove(\"confirm\");\r\n        }\r\n    }, [show])\r\n\r\n    const modal = show ? (\r\n        <div className=\"confirmation_container\">\r\n            <div className=\"confirmation_content\">\r\n                <div className=\"confirmation_message\">\r\n                    {message}\r\n                </div>\r\n                {useAgreement ? (\r\n                    <div className=\"check_mark\">\r\n                        <FormControlLabel\r\n                            label=\"I agree\"\r\n                            control={<Checkbox onChange={() => setCheckMark(!checkMark)} color=\"primary\"/>}/>\r\n                    </div>\r\n                ) : null}\r\n                <div className=\"buttons_container mt-3\">\r\n                    <Button className=\"mr-2\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}\r\n                            disabled={!checkMark}>\r\n                        Confirm\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n\r\n    return {modal, handleShowChange, handleMessageChange};\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {isEqual} from \"lodash\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\nimport useConfirmation from \"../hooks/confirmation.hook\";\r\n\r\nexport default function UserPost() {\r\n    const history = useHistory();\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    const [initialValues, setInitialValues] = useState({\r\n        title: post?.title || \"\",\r\n        description: post?.description || \"\"\r\n    });\r\n    const {abort, request, loading} = useAbortableHttp();\r\n    const {modal, handleShowChange, handleMessageChange} = useConfirmation(handleDeleting);\r\n    const {token} = useSelector(state => state.authReducer);\r\n    const {postId} = useParams();\r\n\r\n    useEffect(() => {\r\n        request(`/api/user/post/${postId}`, {\r\n            method: \"GET\",\r\n            body: null,\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        }).then(data => {\r\n            setData(data)\r\n        });\r\n\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [postId, token])\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues,\r\n        validationSchema: Yup.object({\r\n            title: Yup.string()\r\n                .max(255, \"Must be 255 characters or less\")\r\n                .required('This field is required'),\r\n            description: Yup.string()\r\n                .max(5000, \"Must be 5000 characters or less\")\r\n                .required('This field is required')\r\n        }),\r\n        onSubmit: async function (values) {\r\n            const data = await request(`/api/user/post/${postId}`, {\r\n                method: \"PUT\",\r\n                body: values,\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            setData(data)\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (!isEqual(formik.initialValues, formik.values)) {\r\n            setIsChanged(true);\r\n        } else {\r\n            setIsChanged(false)\r\n        }\r\n    }, [formik.initialValues, formik.values])\r\n\r\n    async function handleDeleting() {\r\n        await request(`/api/user/post/${postId}`, {\r\n            method: \"DELETE\",\r\n            body: null,\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        });\r\n        history.push(\"/user/account/my_posts\");\r\n    }\r\n\r\n    function setData(data) {\r\n        if (data && data.result) {\r\n            setPost(data.result);\r\n            setInitialValues({\r\n                title: data.result.title,\r\n                description: data.result.description\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {post && (\r\n                    <>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"title\"}>Title:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                    <input id=\"title\" type=\"text\" {...formik.getFieldProps(\"title\")}/>\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    {formik.touched.title && formik.errors.title ? (\r\n                                        <>{formik.errors.title}</>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"input_container mb-2\">\r\n                                <div className=\"label_container\">\r\n                                    <label htmlFor={\"description\"}>Description:</label>\r\n                                </div>\r\n                                <div className=\"input\">\r\n                                        <textarea className=\"w-100\"\r\n                                                  id=\"description\"\r\n                                                  rows=\"10\"\r\n                                                  {...formik.getFieldProps(\"description\")}\r\n                                        />\r\n                                </div>\r\n                                <div className=\"errors_container\">\r\n                                    {formik.touched.description && formik.errors.description ? (\r\n                                        <>{formik.errors.description}</>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"publication_date\">\r\n                                Publication date: <br/>\r\n                                {(new Date(post.publication_date).toUTCString())}\r\n                            </div>\r\n                            <div className=\"last_update_date\">\r\n                                Last time updated: <br/>\r\n                                {(new Date(post.last_update_date).toUTCString())}\r\n                            </div>\r\n                            <div className=\"d-flex buttons_container mt-2\">\r\n                                <Button className=\"mr-2\" variant=\"contained\" color=\"secondary\" type=\"submit\"\r\n                                        disabled={loading ? true : !isChanged}>\r\n                                    Update\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" type=\"button\"\r\n                                        disabled={loading}\r\n                                        onClick={() => {\r\n                                            handleShowChange();\r\n                                            handleMessageChange(\r\n                                                <div>\r\n                                                    Are you sure you want to delete this post?\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                >\r\n                                    Delete Post\r\n                                </Button>\r\n                                {modal}\r\n                            </div>\r\n                        </form>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function AccountInfo() {\r\n    const {id, nickname, email, creation_date} = useSelector(state => state.authReducer)[\"userData\"];\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"account_data_container\">\r\n                id: {id}\r\n            </div>\r\n            <div className=\"account_data_container\">\r\n                nickname: {nickname}\r\n            </div>\r\n            <div className=\"account_data_container\">\r\n                email: {email}\r\n            </div>\r\n            <div className=\"account_data_container\">\r\n                creation_date: {new Date(creation_date).toUTCString()}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Collapse, Button} from \"@material-ui/core\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport useAbortableHttp from \"../hooks/abortableHttp.hook\";\r\nimport {updateUserData} from \"../redux/reducers/authReducer\";\r\n\r\nexport default function AccountSettings() {\r\n    const {token, userData} = useSelector(state => state.authReducer);\r\n    const dispatch = useDispatch();\r\n    const {abort, request, loading} = useAbortableHttp();\r\n    const {id, nickname, email} = userData;\r\n\r\n    const [open, setOpen] = useState(0)\r\n\r\n    const emailFormik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .max(255, \"Must be 255 characters or less\")\r\n                .email(\"Enter please valid email\")\r\n                .required('This field is required')\r\n        }),\r\n        onSubmit: async (values) => {\r\n            const data = await request(`/api/user/${id}/email`, {\r\n                method: \"PUT\",\r\n                body: {changes: values},\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            if (data && data.result) {\r\n                dispatch(updateUserData(data.result));\r\n            }\r\n        }\r\n    })\r\n\r\n    const nicknameFormik = useFormik({\r\n        initialValues: {\r\n            nickname: \"\",\r\n        },\r\n        validationSchema: Yup.object({\r\n            nickname: Yup.string()\r\n                .max(30, \"Must be 30 characters or less\")\r\n                .required('This field is required')\r\n        }),\r\n        onSubmit: async (values) => {\r\n            const data = await request(`/api/user/${id}/nickname`, {\r\n                method: \"PUT\",\r\n                body: {changes: values},\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            if (data && data.result) {\r\n                dispatch(updateUserData(data.result));\r\n            }\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        return function () {\r\n            abort();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"account_setting_container\">\r\n            <div className=\"setting_data_container border-top border-bottom\">\r\n                {open === 1 && emailFormik.errors.email ? (\r\n                    <div className=\"errors_container\">\r\n                        <Alert severity=\"error\">{emailFormik.errors.email}</Alert>\r\n                    </div>\r\n                ) : null}\r\n                <div className=\"data_container p-2\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"label col-3\">\r\n                            Email:\r\n                        </div>\r\n                        <div className=\"value col-9\">\r\n                            {email}\r\n                        </div>\r\n                    </div>\r\n                    <Collapse in={open === 1}>\r\n                        <div className=\"row\">\r\n                            <div className=\"label col-3\">\r\n                                new Email:\r\n                            </div>\r\n                            <div className=\"value col-9\">\r\n                                <form onSubmit={emailFormik.handleSubmit}>\r\n                                    <input id=\"email\" type=\"text\" {...emailFormik.getFieldProps(\"email\")}/>\r\n                                    <div className=\"mt-2\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            disabled={loading}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                    <div className=\"collapse_opener\">\r\n                        <a\r\n                            href=\"/\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                setOpen(open === 1 ? 0 : 1);\r\n                            }}\r\n                        >\r\n                            Show\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"setting_data_container border-top border-bottom\">\r\n                {open === 2 && nicknameFormik.errors.nickname ? (\r\n                    <div className=\"errors_container\">\r\n                        <Alert severity=\"error\">{nicknameFormik.errors.nickname}</Alert>\r\n                    </div>\r\n                ) : null}\r\n                <div className=\"data_container p-2\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"label col-3\">\r\n                            nickname:\r\n                        </div>\r\n                        <div className=\"value col-9\">\r\n                            {nickname}\r\n                        </div>\r\n                    </div>\r\n                    <Collapse in={open === 2}>\r\n                        <div className=\"row\">\r\n                            <div className=\"label col-3\">\r\n                                new Nickname:\r\n                            </div>\r\n                            <div className=\"value col-9\">\r\n                                <form onSubmit={nicknameFormik.handleSubmit}>\r\n                                    <input id=\"nickname\" type=\"text\" {...nicknameFormik.getFieldProps(\"nickname\")}/>\r\n                                    <div className=\"mt-2\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            disabled={loading}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                    <div className=\"collapse_opener\">\r\n                        <a\r\n                            href=\"/\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                setOpen(open === 2 ? 0 : 2);\r\n                            }}\r\n                        >\r\n                            Show\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Switch, Link, Route, Redirect, useRouteMatch} from \"react-router-dom\";\r\n\r\nimport WritePost from \"../WritePost\";\r\nimport ShowUserPosts from \"../ShowUserPosts\";\r\nimport UserPost from \"../UserPost\";\r\nimport AccountInfo from \"../AccountInfo\";\r\nimport AccountSettings from \"../AccountSettings\";\r\nimport useAuth from \"../../hooks/auth.hook\";\r\nimport useConfirmation from \"../../hooks/confirmation.hook\";\r\n\r\nexport default function UserAccountPage() {\r\n    const match = useRouteMatch();\r\n\r\n    const {logout} = useAuth();\r\n    const {modal, handleShowChange, handleMessageChange} = useConfirmation(handleLogout, false);\r\n\r\n    function handleLogout() {\r\n        logout();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row pt-4\">\r\n                <ul className=\"account_navbar col-2\">\r\n                    <li>\r\n                        <Link to={match.url}>Account info</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${match.url}/settings`}>Settings</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${match.url}/post/create`}>Write post</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${match.url}/my_posts`}>My posts</Link>\r\n                    </li>\r\n                    <li>\r\n                        <a\r\n                            href=\"/\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                handleMessageChange(\r\n                                    <div>\r\n                                        Are you sure you want to logout?\r\n                                    </div>\r\n                                );\r\n                                handleShowChange();\r\n                            }}\r\n                        >\r\n                            Logout\r\n                        </a>\r\n                        {modal}\r\n                    </li>\r\n                </ul>\r\n                <div className=\"account_content col-10\">\r\n                    <Switch>\r\n                        <Route path={match.path} exact>\r\n                            <AccountInfo/>\r\n                        </Route>\r\n                        <Route path={`${match.path}/settings`} exact>\r\n                            <AccountSettings/>\r\n                        </Route>\r\n                        <Route path={`${match.path}/post/create`} exact>\r\n                            <WritePost/>\r\n                        </Route>\r\n                        <Route path={`${match.url}/my_posts`} exact>\r\n                            <ShowUserPosts/>\r\n                        </Route>\r\n                        <Route path={`${match.url}/my_posts/:postId`} exact>\r\n                            <UserPost/>\r\n                        </Route>\r\n                        <Redirect to={match.path}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport UserAccountPage from \"../components/pages/UserAccountPage\";\r\nimport ShowPosts from \"../components/ShowPosts\";\r\nimport ShowPost from \"../components/ShowPost\";\r\n\r\nexport default function UserRoutes() {\r\n    const {nickname} = useSelector(state => state.authReducer)[\"userData\"];\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <div className=\"container p-2\">\r\n                    Welcome {nickname}!\r\n                    <hr/>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad, consectetur, rerum! Delectus esse et\r\n                    facilis, iusto maxime quae reprehenderit soluta voluptates? Accusamus laboriosam nulla quas sunt\r\n                    voluptates? Ad alias amet eligendi fugiat, illum iure iusto, labore officia quas reprehenderit\r\n                    similique.\r\n                </div>\r\n            </Route>\r\n            <Route path=\"/posts\" exact>\r\n                <ShowPosts/>\r\n            </Route>\r\n            <Route path=\"/post/:postId\" exact>\r\n                <ShowPost/>\r\n            </Route>\r\n            <Route path=\"/user/account\">\r\n                <UserAccountPage/>\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    );\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function Navbar() {\r\n    const {isAuthenticated} = useSelector(state => state.authReducer)\r\n\r\n    return (\r\n        <div className=\"p-2 bg-dark text-white\">\r\n            <div className=\"container d-flex justify-content-between\">\r\n                <div className=\"logo\">\r\n                    POST ME\r\n                </div>\r\n                <div className=\"navbar d-flex\">\r\n                    <Link to=\"/\" className=\"mr-2\">Home</Link>\r\n                    <Link to=\"/posts\" className=\"mr-2\">Posts</Link>\r\n                    <Link to={isAuthenticated? \"/user/account\" : \"/login\"}>Account</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\nimport {useToasts} from 'react-toast-notifications'\n\nimport VisitorRoutes from \"./routes/visitor-routes\";\nimport UserRoutes from \"./routes/user-routes\";\nimport Loading from \"./components/Loading\";\nimport Navbar from \"./components/Navbar\";\nimport useAutoAuthenticate from \"./hooks/auto-authenticate.hook\";\n\nexport default function App() {\n    const {isReady} = useAutoAuthenticate();\n    const {isAuthenticated} = useSelector(state => state.authReducer);\n\n    const {toastStack, removeToast} = useToasts();\n    useEffect(() => {\n        if (toastStack.length > 5) {\n            removeToast(toastStack[0].id);\n        }\n    }, [toastStack, toastStack.length, removeToast])\n\n    if (!isReady) {\n        return (<Loading/>);\n    }\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar/>\n                {isAuthenticated ? (\n                    <UserRoutes/>\n                ) : (\n                    <VisitorRoutes/>\n                )}\n            </div>\n        </Router>\n    );\n}\n","import {useState, useEffect} from 'react';\r\n\r\nimport useAuth, {userStorageName} from \"./auth.hook\";\r\n\r\nexport default function useAutoAuthenticate() {\r\n    const {login, ready} = useAuth();\r\n\r\n    const [isReady, setIsReady] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsReady(ready);\r\n    }, [ready])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(userStorageName));\r\n        if (data && data.token) {\r\n            login(data.token);\r\n        } else {\r\n            setIsReady(true);\r\n        }\r\n    }, [login]);\r\n\r\n    return {isReady};\r\n}","import {combineReducers} from \"redux\";\r\n\r\nimport {authReducer} from \"./reducers/authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    authReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport {ToastProvider} from 'react-toast-notifications'\nimport {Provider} from 'react-redux';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from './App';\nimport {rootReducer} from \"./redux/rootReducer\";\nimport \"./styles/css/index.css\";\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware()\n});\n\nconst app = (\n    <Provider store={store}>\n        <ToastProvider autoDismiss={true} autoDismissTimeout={4000} placement={\"bottom-left\"}>\n            <App/>\n        </ToastProvider>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}